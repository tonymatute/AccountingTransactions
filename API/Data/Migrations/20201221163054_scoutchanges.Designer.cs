// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.data.migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201221163054_scoutchanges")]
    partial class scoutchanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("API.Entities.Adult", b =>
                {
                    b.Property<int>("AdultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ActiveSinceDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RechartedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScoutMemberId")
                        .HasColumnType("int");

                    b.HasKey("AdultId");

                    b.HasIndex("ScoutMemberId");

                    b.ToTable("Adult");
                });

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActiveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PassworSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.BuckTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScoutMemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TransactionDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("ScoutMemberId");

                    b.ToTable("BuckTransactions");
                });

            modelBuilder.Entity("API.Entities.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("ActiveRank")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RankDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RankId")
                        .HasColumnType("int");

                    b.Property<string>("RankName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ScoutMemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScoutMemberId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("API.Entities.Scout", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ActiveSinceDatetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatrolId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RechartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId");

                    b.ToTable("Scout");
                });

            modelBuilder.Entity("API.Entities.SelectList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ListType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("SelectList");
                });

            modelBuilder.Entity("API.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("CheckNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Reconciliated")
                        .HasColumnType("bit");

                    b.Property<int?>("ScoutMemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TransactionDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("ScoutMemberId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("API.Entities.Adult", b =>
                {
                    b.HasOne("API.Entities.Scout", "Scout")
                        .WithMany("Parents")
                        .HasForeignKey("ScoutMemberId");

                    b.Navigation("Scout");
                });

            modelBuilder.Entity("API.Entities.BuckTransaction", b =>
                {
                    b.HasOne("API.Entities.Scout", "Scout")
                        .WithMany("BuckTransactions")
                        .HasForeignKey("ScoutMemberId");

                    b.Navigation("Scout");
                });

            modelBuilder.Entity("API.Entities.Rank", b =>
                {
                    b.HasOne("API.Entities.Scout", "Scout")
                        .WithMany("Ranks")
                        .HasForeignKey("ScoutMemberId");

                    b.Navigation("Scout");
                });

            modelBuilder.Entity("API.Entities.Transaction", b =>
                {
                    b.HasOne("API.Entities.Scout", "Scout")
                        .WithMany("Transactions")
                        .HasForeignKey("ScoutMemberId");

                    b.Navigation("Scout");
                });

            modelBuilder.Entity("API.Entities.Scout", b =>
                {
                    b.Navigation("BuckTransactions");

                    b.Navigation("Parents");

                    b.Navigation("Ranks");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
