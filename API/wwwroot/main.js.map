{"version":3,"sources":["./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_buttons/btn-cell-renderer/btn-cell-renderer.component.ts","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_guards/authorized-path.guard.ts","./src/app/_component_tooltips/custom-tooltip/custom-tooltip.component.ts","./src/app/_component_tooltips/custom-tooltip/custom-tooltip.component.html","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/reconcile-members/reconcile-members.component.ts","./src/app/reconcile-members/reconcile-members.component.html","./src/app/_modules/shared.module.ts","./src/app/user-edit/user-edit.component.ts","./src/app/user-edit/user-edit.component.html","./src/app/_services/member.service.ts","./src/app/_services/grid.service.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/export-pdf/export-pdf.component.ts","./src/app/export-pdf/export-pdf.component.html","./src/app/_services/admin.service.ts","./src/app/member/member-card/member-card.component.ts","./src/app/member/member-card/member-card.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/app.module.ts","./src/app/_services/lookup.service.ts","./src/app/_models/memberParams.ts","./src/app/confirmed-email/confirmed-email.component.ts","./src/app/confirmed-email/confirmed-email.component.html","./src/app/_resolvers/member-detail.resolver.ts","./src/app/errors/error-test/error-test.component.ts","./src/app/errors/error-test/error-test.component.html","./src/app/update-trooptrack-members/update-trooptrack-members.component.ts","./src/app/update-trooptrack-members/update-trooptrack-members.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/member/member-list/member-list.component.ts","./src/app/member/member-list/member-list.component.html","./src/app/admin/role-management/role-management.component.ts","./src/app/admin/role-management/role-management.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/confirmed-email-sent/confirmed-email-sent.component.ts","./src/app/confirmed-email-sent/confirmed-email-sent.component.html","./src/app/reset-password-sent/reset-password-sent.component.ts","./src/app/reset-password-sent/reset-password-sent.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/_component_extentions/checkbox-renderer/checkbox-renderer.component.ts","./src/app/transactions/transactions.component.ts","./src/app/transactions/transactions.component.html","./src/app/member/member-transactions/member-transactions.component.ts","./src/app/member/member-transactions/member-transactions.component.html","./src/app/_services/paginationHelper.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/_forms/checkbox-input/checkbox-input.component.ts","./src/app/_forms/checkbox-input/checkbox-input.component.html","./src/app/reset-password-complete/reset-password-complete.component.ts","./src/app/reset-password-complete/reset-password-complete.component.html","./src/app/modals/member-add-modal/member-add-modal.component.ts","./src/app/modals/member-add-modal/member-add-modal.component.html","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: String;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) {     \n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-blue',\n      dateInputFormat: 'MM/DD/YYYY',\n      isAnimated: true,\n      adaptivePosition: true\n    }\n  }\n  \n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void { }\n\n}\n","<div class=\"form-group\">\n    <input     \n        type='text'  \n        [class.is-invalid] ='ngControl.touched && ngControl.invalid'\n        class='form-control'\n        [formControl]='ngControl.control'\n        placeholder=\"{{label}}\"\n        bsDatepicker\n        [bsConfig]='bsConfig'\n    >\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>\n\n    \n \n","import { Router } from '@angular/router';\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService, ToastrModule } from 'ngx-toastr';\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n \n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  validationErrors: string[] = [];\n\n\n  constructor(\n    private accountService: AccountService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      username: [\"\", Validators.required],\n      password: [\"\", [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20)]],\n      confirmPassword: [\"\", [Validators.required, this.matchPasswords('password')]],\n      lastName: [\"\", Validators.required],\n      firstName: [\"\", Validators.required],\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')\n      ]),\n      confirmEmail: new FormControl('', [\n        Validators.required,\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n        this.matchEmail('email')\n      ]),\n    });\n  }\n\n  matchEmail(email: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[email].value\n        ? null\n        : { emailMatch: true };\n    };\n  }\n\n  matchPasswords(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value ? null : { isMatching: true };\n    }\n  }\n\n  register() {    \n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl(\"/confirmed-email-sent\");\n    }, error => {   \n        this.validationErrors = error;\n    })\n  }\n  \n  cancel() {\n    this.router.navigateByUrl('/');\n  }\n\n}\n","<div class=\"container\">\r\n    <div class=\"d-flex justify-content-center h-100\">\r\n        <div class=\"card border-primary div-border\">\r\n            <div class=\"card-header\">\r\n                <h3 class=\"text-center text-primary mt-2\">Sign Up</h3>\r\n            </div>\r\n            <div class=\"card-body\" id=\"registerCard\">\r\n                <form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">                   \r\n                    <div class=\"form-group\">\r\n                        <app-text-input [formControl]=\"registerForm.controls['username']\" [label]='\"Username\"'>\r\n                        </app-text-input>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <app-text-input [formControl]=\"registerForm.controls['lastName']\" [label]='\"Lastname\"'>\r\n                        </app-text-input>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <app-text-input [formControl]=\"registerForm.controls['firstName']\" [label]='\"Firstname\"'>\r\n                        </app-text-input>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n\r\n                        <app-text-input [formControl]=\"registerForm.controls['email']\" [label]='\"Email\"'\r\n                            [type]='\"email\"'>\r\n                        </app-text-input>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <app-text-input [formControl]=\"registerForm.controls['confirmEmail']\" [label]='\"Confirm Email\"'\r\n                            [type]='\"email\"'></app-text-input>\r\n\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <app-text-input [formControl]=\"registerForm.controls['password']\" [label]='\"Password\"'\r\n                            [type]='\"password\"'>\r\n                        </app-text-input>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <app-text-input [formControl]=\"registerForm.controls['confirmPassword']\"\r\n                            [label]='\"Confirm Password\"' [type]='\"password\"'>\r\n                        </app-text-input>\r\n                    </div>\r\n\r\n                    <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n                        <ul class=\"text-danger\">\r\n                            <li *ngFor=\"let error of validationErrors\">\r\n                                {{error}}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div class=\"text-center\">\r\n                        <button [disabled]='!registerForm.valid' class=\"btn btn-primary mr-2 rounded-pill\"\r\n                            type=\"submit\">Register\r\n                        </button>\r\n                        <button class=\"btn btn-outline-warning mr-2 rounded-pill\" type=\"button\"\r\n                            (click)=\"cancel()\">Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"text-center\">\n        <img loading=\"lazy\" itemprop=\"image\" src=\"../../../assets/404-error-page-templates.jpg\" alt=\"\" \n            width=\"80%\" height=\"60%\">\n        <div class=\"text-center\">\n            <button class=\"btn btn-outline-primary btn-lg mt-4 rounded-pill\" routerLink='/'>Return To Main Page</button>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { IAfterGuiAttachedParams } from 'ag-grid-community';\n\n\n@Component({\n  selector: 'btn-cell-renderer',\n  template: `  \n    <button class=\"btn btn-sm btn-primary rounded mr-2\" (click)=\"btnEditHandler($event)\">Edit</button>\n    `,\n  \n})\nexport class BtnCellRenderer implements ICellRendererAngularComp, OnDestroy {\n  refresh(params: any): boolean {\n    return false;\n  }\n  afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\n    \n  }\n  \n  private params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  btnEditHandler(event) {\n    this.params.clicked(this.params.value);\n  }\n\n  \n\n  ngOnDestroy() {\n    // no need to remove the button click handler \n    // https://stackoverflow.com/questions/49083993/does-angular-automatically-remove-template-event-listeners\n  }\n}\n","import { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(\n    private http: HttpClient\n    \n  ) {}\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);         \n        }\n      })\n    );\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model)\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);  \n    this.clearCookies();\n  }\n\n  getDecodedToken(token) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n\n  sendForgotPasswordEmail(model:any) {\n    return this.http.post(this.baseUrl + 'account/forgotpassword' , model);\n  }\n\n  resetPassword(model:any) {\n    return this.http.post(this.baseUrl + 'account/resetpassword' , model);\n  }\n\n  clearCookies() {\n    \n    localStorage.removeItem('user');\n  }\n\n\n  confirmEmail(model: any) {\n    return this.http.post(this.baseUrl + 'account/confirmemail', model);\n  }\n}\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"text-primary\">Internal server error.</h2>\n<h4 class=\"text-warning\">Refressing the page will make this error dissapear!!</h4>\n<ng-container *ngIf=\"error\">\n    <h5>Error: <p class=\"text-danger\">{{error.message}}</p></h5>    \n    <h5>Details:</h5>\n    <code class=\"mt-5\" style=\"background-color: white;\">{{error.details}} </code>\n</ng-container>\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]' \n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService\n  ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    })\n  }\n  \n  ngOnInit(): void {\n    //clear the view if not roles\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n  \n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333'\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;    \n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0     \n      this.spinnerService.hide();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  loginMode = false;\n  formMode = false;\n  constructor() {}\n\n  ngOnInit(): void {\n    \n  }\n\n  loginToggle(){\n    this.loginMode = !this.loginMode;\n    this.formMode = this.loginMode;\n   }\n   registerToggle() {\n     this.registerMode = !this.registerMode;\n     this.formMode = this.registerMode;\n   }\n \n   cancelRegisterMode(event: boolean) {\n     this.registerMode = event;\n     this.formMode = this.registerMode;\n   }\n \n   cancelLoginMode(event: boolean) {\n     this.loginMode = event;\n     this.formMode = this.loginMode;\n   }\n}\n","<div class=\"container\">\n    <div  class=\"text-center\" *ngIf=\"!loginMode\">\n        <div >\n            <img src=\"../../assets/logo.jpg\" alt=\"Troop 425\">\n        </div>\n        <div >\n            <!-- <button class=\"btn btn-primary btn-lg rounded-pill shadow-16\" (click)=\"loginToggle()\">Login</button> -->\n        </div>\n    </div>\n\n    <div class=\"container text-center\" style=\"margin-top: 80px\" *ngIf=\"loginMode\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <app-login (cancelLogin)=\"cancelLoginMode($event)\"></app-login> \n            </div>\n        </div>\n    </div>\n\n</div>\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://Localhost:5001/api/',\n  troop: 'BSA Troop 425',\n  charteredOrganization: 'Heritage United Methodist Church',\n  troopLocation: \"Overland Park, Kansas\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport {take} from 'rxjs/operators'\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","import { ToastrService } from 'ngx-toastr';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizedPathGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastrService: ToastrService) {}\n\n  canActivate(): Observable<boolean>   {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user) return true;\n        this.toastrService.error(\"Navigation invalid\")\n      })\n    )\n  }\n  \n}\n","import { Component } from '@angular/core';\nimport { ITooltipAngularComp } from '@ag-grid-community/angular';\nimport { ITooltipParams, IAfterGuiAttachedParams } from '@ag-grid-community/core';\n\n@Component({\n  selector: 'tooltip-component',\n  templateUrl: './custom-tooltip.component.html',\n  styleUrls: ['./custom-tooltip.component.css']\n})\nexport class CustomTooltip implements ITooltipAngularComp  {\n   params: any;\n    data: any;\n  \n  constructor() { }\n  agInit(params: ITooltipParams): void {\n    this.params = params;\n\n    this.data = params.api.getDisplayedRowAtIndex(params.rowIndex).data;\n    this.data.type = this.params.type || 'primary';\n  }\n  afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\n    \n  }\n\n  \n\n}\n","<div class=\"custom-tooltip\">\n    <div [ngClass]=\"'panel panel-' + data.type\">\n      <div class=\"panel-heading\">\n        <h3 class=\"panel-title\">{{ data.activity }}</h3>\n      </div>\n      <div class=\"panel-body\">\n        <h4 [ngStyle]=\"{ whiteSpace: 'nowrap' }\">Hello</h4>\n        More stuff here\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetPasswordForm: FormGroup;\n  validationErrors: string[] = [];\n  passwordchanged: boolean = false;\n  model: any = {};  \n\n  constructor(private accountService: AccountService,\n    private toastrService: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.model.token = this.route.snapshot.queryParamMap.get('token');\n    this.model.userid = this.route.snapshot.queryParamMap.get('userid');\n    this.initializeForm();\n  }\n\n  resetPassword() {   \n    this.model.password = this.resetPasswordForm.value.password;\n    this.accountService.resetPassword(this.model).subscribe(() => {\n      this.toastrService.success(\"Your Password has being reset.\");\n      this.passwordchanged = true;\n      this.router.navigateByUrl('/reset-password-complete');\n    }, (error) => {\n        this.toastrService.error(\"Unable to reset your password!\");\n        this.passwordchanged = false;\n    })\n  }\n\n  initializeForm() {\n    this.resetPasswordForm = this.fb.group({\n      password: [\n        '',\n        [Validators.required, Validators.minLength(8), Validators.maxLength(20)],\n      ],\n      confirmPassword: [\n        '',\n        [Validators.required, this.matchPassword('password')],\n      ]     \n    });\n  }\n\n  matchPassword(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value\n        ? null\n        : { isMatching: true };\n    };\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"d-flex justify-content-center h-100\">\n        <div class=\"card border-primary div-border\">\n            <div class=\"card-header\">\n                <h3 class=\"text-center text-primary mt-2\">Reset Password</h3>\n            </div>\n            <div class=\"card-body\" id=\"forgotPassCard\">\n                <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPassword()\" autocomplete=\"off\">\n                    <div class=\"from-group mt-2\">\n                        <app-text-input [formControl]=\"resetPasswordForm.controls['password']\" [label]='\"Password\"'\n                            [type]='\"password\"' [(ngModel)]=\"model.password\"></app-text-input>\n                    </div>\n                    <div class=\"from-group\">\n                        <app-text-input [formControl]=\"resetPasswordForm.controls['confirmPassword']\"\n                            [label]='\"Confirm Password\"' [type]='\"password\"'></app-text-input>\n                    </div>\n                    <div class=\"form-group text-right mt-2\">\n                        <button [disabled]='!resetPasswordForm.valid' class=\"btn btn-primary\" type=\"submit\">Change\n                            Password</button>\n                    </div>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reconcile-members',\n  templateUrl: './reconcile-members.component.html',\n  styleUrls: ['./reconcile-members.component.css']\n})\nexport class ReconcileMembersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reconcile-members works!</p>\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs'\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    PaginationModule.forRoot(),   \r\n    BrowserAnimationsModule,\r\n    TimeagoModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    NgxPaginationModule\r\n    \r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    BsDatepickerModule,\r\n    TabsModule,\r\n    PaginationModule,\r\n    NgxGalleryModule,\r\n    BrowserAnimationsModule,\r\n    FileUploadModule,\r\n    TimeagoModule,\r\n    TooltipModule,\r\n    ButtonsModule,\r\n    ModalModule,\r\n    NgxPaginationModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { AccountService } from './../_services/account.service';\nimport { User } from './../_models/user';\nimport { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n  user: User;\n\n  constructor(private accountService: AccountService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>{{user.firstName + \" \" + user.lastName}}</p>\n","import { Patrol } from './../_models/patrol';\nimport { ActivityType } from './../_models/activityType';\nimport { TransactionType } from './../_models/transactionType';\nimport { map } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { AccountService } from './account.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { MemberParams } from './../_models/memberParams';\nimport { Member } from './../_models/member';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {\n  getMemberPaginationHeaders,\n  getPaginationResult,\n} from './paginationHelper';\nimport { Transaction } from '../_models/transaction';\nimport { NewTransaction } from '../_models/newTransaction';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberParams: MemberParams;\n  memberCache = new Map();\n\n  constructor(\n    private http: HttpClient,\n    private accountService: AccountService\n  ) {\n    this.memberParams = new MemberParams();\n  }\n\n  deleteMemberFromCache(memberParams: MemberParams) {\n    var response = this.memberCache.get(Object.values(memberParams).join('-'));\n    if (response) {\n      this.memberCache.delete(Object.values(memberParams).join('-'));\n    }\n  }\n\n  getMembers(memberParams: MemberParams) {\n    var response = this.memberCache.get(Object.values(memberParams).join('-'));\n    if (response) {\n      return of(response);\n    }\n\n    let params = getMemberPaginationHeaders(memberParams);\n\n    return getPaginationResult<Member[]>(\n      this.baseUrl + 'member',\n      params,\n      this.http\n    ).pipe(\n      map((response) => {\n        this.memberCache.set(Object.values(memberParams).join('-'), response);\n        return response;\n      })\n    );\n  }\n\n  getMember(id: number) {\n    const member = [...this.memberCache.values()]\n      .reduce(\n        (previousValueArr, currentValue) =>\n          previousValueArr.concat(currentValue.result),\n        []\n      )\n      .find((member: Member) => member.memberId === id);\n\n    if (member) {\n      return of(member);\n    }\n    return this.http.get<Member>(this.baseUrl + 'member/' + id);\n  }\n\n  resetParamParams() {\n    this.memberParams = new MemberParams();\n    return this.memberParams;\n  }\n\n  getMemberParams() {\n    return this.memberParams;\n  }\n\n  setMemberParams(memberParams: MemberParams) {\n    this.memberParams = memberParams;\n  }\n\n  getTransactionTypes() {\n    return this.http.get<TransactionType[]>(\n      this.baseUrl + 'member/GetTransactionTypes'\n    );\n  }\n\n  getActivityTypes() {\n    return this.http.get<ActivityType[]>(\n      this.baseUrl + 'member/GetActivityTypes'\n    );\n  }\n\n  getPatrols() {\n    return this.http.get<Patrol[]>(this.baseUrl + 'member/GetPatrolList');\n  }\n\n  addTransaction(memberId: number, transaction: NewTransaction) {\n    let params = new HttpParams();\n\n    params = params.append('TransactionTypeId', transaction.transactionTypeId);\n    params = params.append('ActivityTypeId', (transaction.activityTypeId === '' ? '0' : transaction.activityTypeId)\n    );\n    params = params.append('TransactionCredit', transaction.transactionCredit);\n    params = params.append('TransactionDebit', transaction.transactionDebit);\n    params = params.append('CheckNumber', transaction.checkNumber);\n    params = params.append('TransactionDate', transaction.transactionDate);\n    params = params.append('TransactionTypeId', transaction.transactionTypeId);\n    params = params.append('Comments', transaction.comments);\n\n    return this.http.post( this.baseUrl + 'member/add-transaction/' + memberId +'?transaction=' + params, {} );\n  }\n\n  updateTroopTrackMembers() {\n    return this.http.post(this.baseUrl + 'member/update-trooptrack-members', {});\n  }\n\n  deleteTransaction(memberId: number, transactionId: number) {\n    return this.http.delete(this.baseUrl + 'member/delete-transaction?memberId=' + memberId + '&transactionId=' + transactionId, {});\n  }\n\n  \n\n}\n","import { Transaction } from './../_models/transaction';\nimport { Injectable } from '@angular/core';\nimport { formatDate } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GridtService {\n\n  constructor() { }\n\n  loadSortableScripts() {\n    const dynamicScripts = ['https://www.kryogenix.org/code/browser/sorttable/sorttable.js'];\n    for (let i = 0; i < dynamicScripts.length; i++) {\n      const node = document.createElement('script');\n      node.src = dynamicScripts[i];\n      node.type = 'text/javascript';\n      node.async = false;\n      node.charset = 'utf-8';\n      document.getElementsByTagName('head')[0].appendChild(node);\n    }\n  }\n\n \n  sorTransactionsByDateDesc(transactions: Transaction[]) {\n    return transactions.sort((a, b) => {\n      return <any>new Date(b.transactionDate) - <any>new Date(a.transactionDate);\n    });\n  }\n\n  dateFormatter(date) {\n    var format = 'MM/dd/yyyy';\n    var locale = 'en-US';\n    var formattedDate = formatDate(date, format, locale);\n    return formattedDate;\n  }\n\n}\n","import { ToastrService } from 'ngx-toastr';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              const modalStateErrors = [];\n\n              if (error instanceof HttpErrorResponse) {\n                if (error.error instanceof Array) {\n                  for (const key in error.error) {\n                    if (error.error[key]) {\n                      modalStateErrors.push(error.error[key].description);\n                    }\n                  }\n                  modalStateErrors.flat().forEach((err: any) => {\n                    this.toastr.error(err);\n                  });\n                  break;\n                } else {\n                  if (error.error.title) {\n                    this.toastr.error(error.error.title);\n                  } else {\n                    this.toastr.error(error.error);\n                  };\n                  break;\n                }\n\n                if (error.error.errors instanceof Array) {\n                  for (const key in error.error.errors) {\n                    if (error.error.errors[key]) {\n                      modalStateErrors.push(error.error.errors[key]);\n                    }\n                  }\n                  modalStateErrors.flat().forEach((err) => {\n                    this.toastr.error(err);\n                  });\n                  break;\n                }\n              }\n\n              this.toastr.error(error.statusText);\n              break;\n            case 401:\n              if (error.error) {\n                this.toastr.error(error.error);\n              } else {\n                this.toastr.error('Unauthorized User');\n              }\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {\n                state: { error: error.error },\n              };\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('something unexpected went very wrong!');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { ToastrService } from 'ngx-toastr';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\n  canActivate(): Observable<boolean>  {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user.roles.includes('Admin')) {\n          return true;\n        }\n        this.toastr.error('You do not have permission to navigate this page!... ')\n      })\n    )\n  }\n  \n}\n","import { Component, OnInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-export-pdf',\n  templateUrl: './export-pdf.component.html',\n  styleUrls: ['./export-pdf.component.css']\n})\nexport class ExportPdfComponent implements OnInit {\n  api;\n  columnApi;\n  columnDefs;\n  data;\n  noDataReceived = true;\n  gridState;\n  afterPrint = false;\n  afterFocus = false;\n  isDesktopChrome = false;\n  constructor() { }\n\n  ngOnInit() {\n    let exportedData = history.state;\n    if (exportedData.gridState) {\n      this.noDataReceived = false;\n    }\n    else {\n      this.noDataReceived = true;\n    }\n    if (!this.noDataReceived) {\n      this.data = exportedData.rowData;\n      this.gridState = exportedData.gridState;\n      this.columnDefs = exportedData.columnDefs;\n    }\n    // Check if the browser is desktop chrome (This is required for detecting when the print/save is finished, as Desktop chrome handles the print internally window focus based detection doesn't work)\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(navigator.userAgent)){\n      this.isDesktopChrome = false;\n    }\n    else if(/Chrome/i.test(navigator.userAgent)){\n      this.isDesktopChrome = true;\n    }\n  }\n\n  onGridReady(params){\n  this.api = params.api;\n  this.columnApi = params.columnApi;\n  this.api.setColumnDefs(this.columnDefs);\n  this.api.setRowData(this.data);\n}\n\n onDataRendered(){\n    // Grab the grid state from incoming component\n    this.columnApi.setColumnState(this.gridState.colState);\n    this.api.setSortModel(this.gridState.sortState);\n    this.api.setFilterModel(this.gridState.filterState);\n    this.api.sizeColumnsToFit();\n    // call setDomLayout('print') for proper print layout (Api function provided by ag grid)\n    this.api.setDomLayout('print');\n    // window.blur();\n    setTimeout(()=>{\n      // call print after a time out so that print layout loads properly\n      print();\n      this.afterPrint = true;\n    }, 400);\n  }\n\n// If the browser is Desktop Chrome the following even listener works perfectly\n  @HostListener('window:afterprint')\n  onAfterPrint() {\n    if(this.isDesktopChrome){\n      setTimeout(()=>{\n      history.back();\n    }, 200);\n    }\n  }\n\n// For other browser detect print finish\n  @HostListener('window:focus')\n  onFocusafterprint() {\n    if(!this.isDesktopChrome && this.afterPrint){\n      setTimeout(()=>{\n      history.back();\n    }, 200);\n  }\n  }\n}","<ag-grid-angular style=\"height: 800px; width: 1020px\" \n  [rowData]=\"data\"    \n   class=\"ag-theme-balham\"\n  [columnDefs]=\"columnDefs\"\n  (gridReady)=\"onGridReady($event)\"\n  (firstDataRendered)=\"onDataRendered()\">\n</ag-grid-angular>","\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AvailableRole } from '../_models/availableRole';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + \"admin/users-with-roles\");\n  }\n\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n\n  getAvailableRoles() {\n    return this.http.get<Partial<AvailableRole[]>>(this.baseUrl + \"admin/available-roles\");\n  }\n}\n","import { Member } from './../../_models/member';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member: Member;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card mb-3\">\n    <div class=\"card-img-wrapper\">\n        <img class=\"card-img-top\" src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.firstName}}\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" routerLink=\"/member/{{member.memberId}}\" placement=\"top\"\n                    tooltip=\"Transactions\">\n                    <i class=\"fa fa-table\"></i>\n                </button>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <i class=\"fa fa-user mr-2\"></i>\n            {{member.firstName + ' ' + member.lastName}}, &nbsp; {{member.age> 0 ? member.age: '' }}\n        </h6>\n        <h6 class=\" text-center text-muted\">{{member.patrol}}</h6>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Troop 425';\n  users: any;\n\n  constructor(private accountService: AccountService) {}\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    this.accountService.setCurrentUser(user);\n  }\n}\n","<ngx-spinner>\r\n    <p style=\"font-size: 30px; color:black\">Loading...</p>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 80px;\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor( private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n  email: FormControl;\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.email = new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n      Validators.email,\n    ]);\n    this.forgotPasswordForm = this.fb.group({\n      email: this.email,\n    });\n  }\n\n  cancel() {\n    this.router.navigateByUrl('/');\n  }\n\n  resetPassword() {\n    let emailInfo = this.forgotPasswordForm.value;\n    this.accountService.sendForgotPasswordEmail(emailInfo).subscribe(\n      (respond) => {\n        this.router.navigateByUrl('/reset-password-sent');\n      },\n      (error) => {\n        this.validationErrors = error;\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"d-flex justify-content-center h-100\">\n        <div class=\"card  border-primary\">\n            <div class=\"card-header\">\n                <h3 class=\"text-center text-primary mt-2\">Reset Password</h3>\n            </div>\n            <div class=\"card-body\" id=\"forgotPassCard\">\n                <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"resetPassword()\">\n                    <div class=\"input-group form-group\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" style=\"height: 38px\"><i class=\"fa fa-envelope\"></i></span>\n                        </div>\n                        <app-text-input [formControl]=\"forgotPasswordForm.controls['email']\" [label]='\"Email\"'\n                            [type]='\"email\"' style=\"width: 360px;\">\n                        </app-text-input>\n                    </div>\n                    <div class=\"form-group text-right\">\n                        <button [disabled]='!forgotPasswordForm.valid' class=\"btn rounded btn-primary mr-2\" type=\"submit\">Reset\n                            Password</button>\n                        <button class=\"btn btn-outline-warning\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n                    </div>\n                    <div id=\"errors\">\n                        <div *ngIf=\"email.touched && email.errors\" class=\"errorMessage\" class=\"text-danger\">\n                            <span *ngIf=\"email.hasError('required')\">Email is required.</span>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"d-flex justify-content-center links\">Don't have an account?&nbsp;<a\n                        [routerLink]=\"['/register']\">Sign Up</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { ErrorTestComponent } from './errors/error-test/error-test.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { TransactionsComponent } from './transactions/transactions.component';\r\nimport { BtnCellRenderer } from './_buttons/btn-cell-renderer/btn-cell-renderer.component';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { CheckboxRenderer } from './_component_extentions/checkbox-renderer/checkbox-renderer.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { RoleManagementComponent } from './admin/role-management/role-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ExportPdfComponent } from './export-pdf/export-pdf.component';\r\nimport { CustomTooltip } from './_component_tooltips/custom-tooltip/custom-tooltip.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\nimport { ConfirmedEmailComponent } from './confirmed-email/confirmed-email.component';\r\nimport { ConfirmedEmailSentComponent } from './confirmed-email-sent/confirmed-email-sent.component';\r\nimport { ResetPasswordSentComponent } from './reset-password-sent/reset-password-sent.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ResetPasswordCompleteComponent } from './reset-password-complete/reset-password-complete.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { CheckboxInputComponent } from './_forms/checkbox-input/checkbox-input.component';\r\nimport { MemberListComponent } from './member/member-list/member-list.component';\r\nimport { MemberTransactionsComponent } from './member/member-transactions/member-transactions.component';\r\nimport { MemberCardComponent } from './member/member-card/member-card.component';\r\nimport { MemberAddModalComponent } from './modals/member-add-modal/member-add-modal.component';\r\nimport { UpdateTrooptrackMembersComponent } from './update-trooptrack-members/update-trooptrack-members.component';\r\nimport { ReconcileMembersComponent } from './reconcile-members/reconcile-members.component';\r\n\r\n@NgModule({\r\n  declarations: [    \r\n    AppComponent,\r\n    NavComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    ErrorTestComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    TransactionsComponent,  \r\n    BtnCellRenderer,\r\n    UserEditComponent,   \r\n    CheckboxRenderer,\r\n    HasRoleDirective,\r\n    AdminPanelComponent,\r\n    RoleManagementComponent,\r\n    RolesModalComponent,\r\n    ExportPdfComponent,\r\n    CustomTooltip,\r\n    ConfirmDialogComponent,\r\n    ConfirmedEmailComponent,\r\n    ConfirmedEmailSentComponent,\r\n    ResetPasswordSentComponent,\r\n    ResetPasswordComponent,\r\n    ResetPasswordCompleteComponent,\r\n    ForgotPasswordComponent,\r\n    CheckboxInputComponent,\r\n    MemberListComponent,\r\n    MemberTransactionsComponent,\r\n    MemberCardComponent,\r\n    MemberAddModalComponent,\r\n    UpdateTrooptrackMembersComponent,\r\n    ReconcileMembersComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxSpinnerModule,\r\n    AgGridModule.withComponents([BtnCellRenderer, CheckboxRenderer, CustomTooltip])\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LookUpTable } from '../_models/lookUpTable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LookupService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n\n  getPatrols() {\n    return this.http.get<LookUpTable[]>(this.baseUrl + 'lookup/Patrol');\n  }\n\n  getActivities() {\n    return this.http.get<LookUpTable[]>(this.baseUrl + 'lookup/Activity');\n  }\n\n  getExpenseTypes() {\n    return this.http.get<LookUpTable[]>(this.baseUrl + 'lookup/Expense Type');\n  }\n\n  getLeaderships() {\n    return this.http.get<LookUpTable[]>(this.baseUrl + 'lookup/GetLeadership');\n  }\n\n  getTransactionTypes() {\n    return this.http.get<LookUpTable[]>(this.baseUrl + 'lookup/Transaction Type');\n  }\n\n  \n\n}\n","import { MemberType } from './../_enum/memberTypeEnum';\r\n\r\nexport class MemberParams { \r\n    lastName: string = \"\";\r\n    firstName: string = \"\";\r\n    patrolId: string = \"0\";\r\n    pageNumber: number = 1;\r\n    pageSize: number = 12;\r\n    orderBy: string = \"name\";\r\n    memberType: MemberType = 0;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-confirmed-email',\n  templateUrl: './confirmed-email.component.html',\n  styleUrls: ['./confirmed-email.component.css']\n})\nexport class ConfirmedEmailComponent implements OnInit {\n  emailConfirmed: boolean = false;\n  urlParams: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private accountService: AccountService,\n    private toastrService: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.urlParams.token = this.route.snapshot.queryParamMap.get('token');\n    this.urlParams.userid = this.route.snapshot.queryParamMap.get('userid');\n    this.confirmEmail();\n  }\n\n  confirmEmail() {\n    this.accountService.confirmEmail(this.urlParams).subscribe(() => {\n      this.toastrService.success(\"Email Confirmed succesful\");\n      this.emailConfirmed = true;\n    }, (error) => {\n        this.toastrService.error(\"Unable to confirm your email!\");\n        this.emailConfirmed = false;\n    })\n  }\n}\n","<h1>Thank you!</h1>\n<hr>\n<p>Your email address has been confirmed. Proceed to&nbsp;\n    <a class=\"\" routerLink='/' routerLinkActive='active'>Login</a></p>\n","import { MemberService } from './../_services/member.service';\nimport { Member } from './../_models/member';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberDetailResolver implements Resolve<Member> {\n  constructor(private memberService: MemberService ) {}\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n        return this.memberService.getMember( Number( route.paramMap.get('id')));\n    }\n}\n","import { environment } from './../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-test',\n  templateUrl: './error-test.component.html',\n  styleUrls: ['./error-test.component.css']\n})\nexport class ErrorTestComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  getNotFoundError() {\n    return this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);      \n    }, error => {\n        console.log(error);        \n    })\n  }\n\n  getValidationError() {\n    return this.http.post(this.baseUrl + 'account/register',{}).subscribe(response => {\n      console.log(response);      \n    }, error => {                   \n        if (error.error.errors) {\n          for (const key in error.error.errors) {\n            if (error.error.errors[key]) {\n              this.validationErrors.push(error.error.errors[key]);\n            }\n          }\n        }\n    })\n  }\n\n  getServerError() {\n    return this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);      \n    }, error => {\n        console.log(error);        \n    })\n  }\n\n  getBadRequestError() {\n    return this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);      \n    }, error => {\n        console.log(error);        \n    })\n  }\n\n  getAuthError() {\n    return this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);      \n    }, error => {\n        console.log(error);        \n    })\n  }\n\n}\n","<ng-container>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"getNotFoundError()\">Test Not Found Error</button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"getServerError()\">Test Server Error</button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"getValidationError()\">Test Validation Error</button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"getBadRequestError()\">Test Bad Request Error</button>\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"getAuthError()\">Test Auth Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">{{error}}</li>\n        </ul>\n    </div>\n</ng-container>","import { browser } from 'protractor';\nimport { Component, OnInit } from '@angular/core';\nimport { MemberService } from '../_services/member.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-trooptrack-members',\n  templateUrl: './update-trooptrack-members.component.html',\n  styleUrls: ['./update-trooptrack-members.component.css']\n})\nexport class UpdateTrooptrackMembersComponent implements OnInit {\n  updating: boolean = false;\n\n  constructor( private memberService: MemberService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.updateMembers();\n  }\n\n  updateMembers() {\n    this.updating = true;\n    this.memberService.updateTroopTrackMembers().subscribe(() => {\n      this.updating = false;\n      this.router.navigateByUrl(\"/member\");     \n    }) \n\n  }\n\n}\n","<div class=\"container mt-20\">\n    <h3 class=\"text-center text-primary bold\">\n        Updating TroopTrack Members...\n    </h3> \n</div>\n   \n    ","import { Component, Input,  Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: String;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n  \n\n \n\n}\n","<div class=\"form-group\">\n    <input \n        [class.is-invalid]='ngControl.touched && ngControl.invalid'\n        type={{type}}\n        class=\"form-control\" \n        [formControl]=\"ngControl.control\" \n        placeholder={{label}}>\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter {{label}}</div>\n    <div *ngIf=\"ngControl.control.errors?.minlength\" \n        class=\"invalid-feedback\">{{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}} characters</div>\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" \n        class=\"invalid-feedback\">{{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}} characters</div>\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">Passwords do not match</div>\n    <div *ngIf=\"ngControl.control.errors?.pattern\" class=\"invalid-feedback\">Invalid Email</div>\n    <div *ngIf=\"ngControl.control.errors?.emailMatch\" class=\"invalid-feedback\">Emails do not match</div>\n    <div *ngIf=\"ngControl.control.errors?.email\" class=\"invalid-feedback\">Invalid Email</div>\n</div>","import { LookupService } from './../../_services/lookup.service';\nimport { MemberService } from './../../_services/member.service';\nimport { MemberParams } from './../../_models/memberParams';\nimport { Member } from './../../_models/member';\nimport { Pagination } from './../../_models/pagination';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css'],\n})\nexport class MemberListComponent implements OnInit {\n  pagination: Pagination;\n  members: Member[];\n  memberParams: MemberParams;\n  //patrols: LookUpTable[];\n  loading: boolean = false;\n  constructor(\n    private memberService: MemberService,\n    private lookUpService: LookupService\n  ) {\n    this.memberParams = this.memberService.getMemberParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers() {\n    this.loading = true;\n    this.memberService.setMemberParams(this.memberParams);\n    this.memberService.getMembers(this.memberParams).subscribe((response) => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n      this.loading = false;\n    });\n  }\n  loadMembersFromRadioButton() { \n    this.memberParams.pageNumber = 1;\n    this.memberService.setMemberParams(this.memberParams);\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.memberParams.pageNumber = event.page;\n    this.memberService.setMemberParams(this.memberParams);\n    this.loadMembers();\n  }\n\n  resetFilter() {\n    this.memberParams = this.memberService.resetParamParams();\n    this.loadMembers();\n  }\n\n\n  onKeyUp(boxInput: HTMLInputElement) {\n    let length = boxInput.value.length; //this will have the length of the text entered in the input box\n    if (length >= 3) {\n      if (boxInput.name == 'lastName') {\n        this.memberParams.lastName = boxInput.value;\n      }\n      if (boxInput.name == 'firstName') {\n        this.memberParams.firstName = boxInput.value;\n      }\n      this.memberService.setMemberParams(this.memberParams);\n      this.loadMembers();\n    }\n  }\n\n  selectedChange(value) {\n    this.memberParams.patrolId = value;\n    this.memberService.setMemberParams(this.memberParams);\n    this.loadMembers();\n  }\n\n  deleteScoutFromCache() {\n    this.memberService.deleteMemberFromCache(this.memberParams);\n    }\n\n}\n","<div class=\"text-center\">\n    <h2 class=\"font-weight-bold\">{{pagination?.totalItems}} Members Found </h2>\n</div>\n\n<div class=\"container mt-3\">\n    <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n        <div class=\"ml-3\">\n            <div class=\"btn-group float-right\">\n                <button type=\"button\" name=\"memberType\" (click)=\"loadMembersFromRadioButton()\" btnRadio=\"0\"\n                    [(ngModel)]=\"memberParams.memberType\" class=\"btn btn-sm btn-primary\">Scouts</button>\n                <button type=\"button\" name=\"memberType\" (click)=\"loadMembersFromRadioButton()\" btnRadio=\"1\"\n                    [(ngModel)]=\"memberParams.memberType\" class=\"btn btn-sm btn-primary\">Adults</button>\n                <button type=\"button\" name=\"memberType\" (click)=\"loadMembersFromRadioButton()\" btnRadio=\"2\"\n                    [(ngModel)]=\"memberParams.memberType\" class=\"btn btn-sm btn-primary\">Age Scouts</button>\n            </div>\n        </div>\n        <div class=\"form-group px-2\">\n            <input #lastName type=\"text\" class=\"form-control ml-1\" style=\"width: 100px;\" name=\"lastName\"\n                [(ngModel)]=\"memberParams.lastName\" placeholder=\"Lastname\" (keyup)=\"onKeyUp(lastName)\"\n                autocomplete=\"off\">\n        </div>\n        <div class=\"form-group px-1\">\n            <input #firstName type=\"text\" class=\"form-control ml-1\" style=\"width: 100px;\" name=\"firstName\"\n                autocomplete=\"off\" [(ngModel)]=\"memberParams.firstName\" placeholder=\"Firstname\"\n                (keyup)=\"onKeyUp(firstName)\">\n        </div>\n        <button class=\"btn btn-sm btn-secondary ml-1 rounded\" (click)=\"resetFilter()\" type=\"submit\">Reset\n            Filter\n        </button>\n        <div class=\"ml-3\">\n            <div class=\"btn-group float-right\">\n                <button type=\"button\" name=\"orderBy\" (click)=\"loadMembers()\" btnRadio=\"name\"\n                    [(ngModel)]=\"memberParams.orderBy\" class=\"btn btn-sm btn-primary\">By Name</button>\n\n                <button type=\"button\" name=\"orderBy\" (click)=\"loadMembers()\" btnRadio=\"patrol\"\n                    [(ngModel)]=\"memberParams.orderBy\" class=\"btn btn-sm btn-primary\">By Patrol</button>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"row\">\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n        <app-member-card [member]='member'></app-member-card>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\"\n    *ngIf=\"pagination && !loading && pagination?.totalItems>memberParams.pageSize\">\n    <pagination style=\"cursor: pointer;\" [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\"\n        [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n        (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { GridtService } from './../../_services/grid.service';\n\nimport { RolesModalComponent } from './../../modals/roles-modal/roles-modal.component';\nimport { AdminService } from './../../_services/admin.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/user';\n\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AvailableRole } from 'src/app/_models/availableRole';\n\n@Component({\n  selector: 'app-role-management',\n  templateUrl: './role-management.component.html',\n  styleUrls: ['./role-management.component.css']\n})\nexport class RoleManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  private availableRoles: AvailableRole[];\n\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private adminService: AdminService,\n    private modalService: BsModalService,\n    private gridService: GridtService) { }\n\n  ngOnInit(): void {\n    this.gridService.loadSortableScripts();\n    \n    this.getavailableRoles()\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe(users => {\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles]\n        })\n      }\n    })    \n  }\n\n  private getRolesArray(user: User) {\n    const roles = [];\n    const userRoles = user.roles;\n    \n    this.availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    })\n    return roles;\n  }\n  \n  private getavailableRoles() {\n    this.adminService.getAvailableRoles ().subscribe(roles => {\n      this.availableRoles = roles;\n    })\n  }\n\n  \n  \n\n}\n","\n<div class=\"row\">\n    <table class=\"table sortable\" id=\"Roles\">\n        <thead>\n            <tr>\n                <th style=\"width: 30%;\">User</th>\n                <th style=\"width: 40%;\">Active Roles</th>\n                <th style=\"width: 15%;\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let user of users\" class=\"item\">\n                <td>{{user.firstName}} {{user.lastName == 'Admin' ? '' : user.lastName}}</td>\n                <td>{{user.roles}}</td>\n                <td class=\"text-center\"><button (click)=\"openRolesModal(user)\"\n                        class=\"btn btn-sm btn-primary rounded\">Edit Roles</button></td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  title = 'Accounting';\n  model: any = {};\n\n  constructor(\n    public accountService: AccountService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {}\n\n  login() {\n    this.accountService.login(this.model).subscribe(\n      (user) => {\n        this.router.navigateByUrl('/member');\n      },\n      (error) => {\n        console.log(error);       \n      }\n    );\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>{{title}}</a>\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n                <li class=\"nav-item \">\r\n                    <a class=\"nav-link\" routerLink='/member' routerLinkActive='active'>Members</a>\r\n                </li>\r\n                            \r\n                <li class=\"nav-item\" *appHasRole='[\"Admin\"]'>\r\n                    <div class=\"dropdown\" dropdown>\r\n                        <a class=\"dropdown-toggle nav-link\" dropdownToggle routerLinkActive='active'>Admin</a>\r\n                        <div class=\"dropdown-menu mt-2\" *dropdownMenu>\r\n                            <a class=\"dropdown-item\" href=\"#\" routerLink='/update-trooptrack-members' routerLinkActive='active'>Update TroopTrack Members</a>\r\n                            <a class=\"dropdown-item\" href=\"#\" routerLink='/reconcile-members' routerLinkActive='active'>Reconcile all Members</a>\r\n                            <div class=\"dropdown-divider\"></div>\r\n                            <a class=\"dropdown-item\" href=\"#\" routerLink='/admin' routerLinkActive='active'>Admin Management</a>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ng-container>\r\n            \r\n        </ul>\r\n        <div class=\"d-flex justify-content-between\">\r\n            <ul class=\"navbar-nav mr-auto\" *ngIf=\"(accountService.currentUser$ | async) == null\">\r\n                <li class=\"nav-item \">\r\n                    <a class=\"nav-link btn btn-outline-success rounded\" routerLink='/login' routerLinkActive='active'>Login</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\r\n            <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome {{user.firstName |titlecase}} </a>\r\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n                <!-- <a class=\"dropdown-item\" routerLink='/user/edit' >Edit User</a>\r\n                <div class=\"dropdown-divider\"></div> -->\r\n                <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n            </div>\r\n        </div>\r\n        <!-- <form *ngIf=\"(accountService.currentUser$ | async) == null\" #loginForm='ngForm' class=\"form-inline mt-2 mt-md-0\"\r\n            (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n            <input name=\"username\" [(ngModel)]=\"model.username\" placeholder=\"Username\" type=\"text\"\r\n                class=\"form-control mr-sm-2\">\r\n            <input name=\"password\" [(ngModel)]=\"model.password\" placeholder=\"Password\" type=\"password\"\r\n                class=\"form-control mr-sm-2\" autocomplete=\"off\">\r\n            <button class=\"btn btn-primary my-2 my-sm-0 rounded-pill\" type=\"submit\">Login</button>\r\n        </form> -->\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmed-email-sent',\n  templateUrl: './confirmed-email-sent.component.html',\n  styleUrls: ['./confirmed-email-sent.component.css']\n})\nexport class ConfirmedEmailSentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>A verification link has been sent to your email account</h1>\n<hr>\n<p>Please click on the link that has just been sent to your email account to verify your email and continue the registration process. </p>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password-sent',\n  templateUrl: './reset-password-sent.component.html',\n  styleUrls: ['./reset-password-sent.component.css']\n})\nexport class ResetPasswordSentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Password Reset</h1>\n<hr>\n<p>An email was sent to your email address with link to change your password. </p>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Management</h2>\n<div class=\"tab-panel\" style=\"width: 60%;\">\n    <tabset class=\"member-tabset\" >\n        <tab heading=\"Role Management\" *appHasRole='[\"Admin\"]' >\n            <div class=\"container\">\n                <app-role-management>\n                </app-role-management>\n            </div>\n        </tab>        \n    </tabset>\n</div>\n","import { Component, OnDestroy } from '@angular/core';\n\nimport { ICellRendererAngularComp } from '@ag-grid-community/angular';\nimport { IAfterGuiAttachedParams } from '@ag-grid-community/core';\n\n@Component({\n  selector: 'checkbox-renderer',\n  template: `\n    <input \n      type=\"checkbox\" \n      class=\"form-check-input ml-2 mt-3\"\n      (click)=\"checkedHandler($event)\"\n      [checked]=\"params.value\"\n      disabled\n    />\n`,\n})\nexport class CheckboxRenderer implements ICellRendererAngularComp, OnDestroy {\n  ngOnDestroy(): void {\n    \n  }\n  refresh(params: any): boolean {\n    return true;\n  }\n  afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\n    \n  }\n  params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  checkedHandler(event) {\n      let checked = event.target.checked;\n      let colId = this.params.column.colId;\n      this.params.node.setDataValue(colId, checked);\n  }\n}\n","\r\nimport { ConfirmService } from './../_services/confirm.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MemberAddModalComponent } from './../modals/member-add-modal/member-add-modal.component';\r\nimport { ActivityType } from './../_models/activityType';\r\nimport { TransactionType } from './../_models/transactionType';\r\nimport { GridtService } from './../_services/grid.service';\r\nimport { MemberService } from './../_services/member.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { Member } from './../_models/member';\r\nimport { Transaction } from './../_models/transaction';\r\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-transactions',\r\n  templateUrl: './transactions.component.html',\r\n  styleUrls: ['./transactions.component.css'],\r\n})\r\nexport class TransactionsComponent implements OnInit {\r\n  @Input() member: Member;\r\n  transactions: Transaction[];\r\n  transactionTypes: TransactionType[];\r\n  activityTypes: ActivityType[];\r\n  totalCredit: number = 0;\r\n  TotalDebit: number = 0;\r\n  total: number = 0;\r\n  public page: number = 1;\r\n\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private modalService: BsModalService,\r\n    private memberService: MemberService,\r\n    private gridService: GridtService,\r\n    private toastr: ToastrService,\r\n    private confirmService: ConfirmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.transactions = this.member.transactions;\r\n    this.gridService.loadSortableScripts();\r\n    this.transactions = this.sortData;\r\n    this.calculateTotals(this.transactions);\r\n    this.getActivityTypes();\r\n    this.getTransactionTypes();\r\n  }\r\n\r\n  calculateTotals(totalTransactions) {\r\n    var result = 0;\r\n\r\n    totalTransactions.forEach((transaction: Transaction) => {\r\n      if (typeof transaction.transactionCredit === 'number')\r\n        this.totalCredit += transaction.transactionCredit;\r\n      if (typeof transaction.transactionDebit === 'number')\r\n        this.TotalDebit += transaction.transactionDebit * -1;\r\n    });\r\n    this.total = this.totalCredit - this.TotalDebit * -1;\r\n  }\r\n\r\n  getColor(balance: number): string {\r\n    if (balance === 0) return null;\r\n    return balance > 0 ? 'green' : 'red';\r\n  }\r\n\r\n  openMemberAddModal(member: Member) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        member,\r\n        activityTypes: this.activityTypeToArray(),\r\n        transactionTypes: this.transactionTypeToArray(),\r\n      },\r\n    };\r\n    this.bsModalRef = this.modalService.show(MemberAddModalComponent, config);\r\n    this.bsModalRef.content.addMemberTransaction.subscribe((values) => {\r\n      const newTransaction = {\r\n        transaction: values,\r\n      };\r\n      if (newTransaction) {\r\n        this.memberService\r\n          .addTransaction(member.memberId, newTransaction.transaction)\r\n          .subscribe(() => {\r\n            member.transactions.push(newTransaction.transaction);\r\n            member.transactions = this.gridService.sorTransactionsByDateDesc(\r\n              member.transactions\r\n            );\r\n            window.location.reload();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  getActivityTypes() {\r\n    this.memberService.getActivityTypes().subscribe((activityTypes) => {\r\n      this.activityTypes = activityTypes;\r\n    });\r\n  }\r\n\r\n  getTransactionTypes() {\r\n    this.memberService.getTransactionTypes().subscribe((transactionTypes) => {\r\n      this.transactionTypes = transactionTypes;\r\n    });\r\n  }\r\n\r\n  get sortData() {\r\n    return this.transactions.sort((a, b) => {\r\n      return (\r\n        <any>new Date(a.transactionDate) - <any>new Date(b.transactionDate)\r\n      );\r\n    });\r\n  }\r\n  private transactionTypeToArray() {\r\n    const transactionTypeArray = [];\r\n\r\n    this.transactionTypes.forEach((transactionType) => {\r\n      transactionTypeArray.push(transactionType);\r\n    });\r\n    return transactionTypeArray;\r\n  }\r\n  private activityTypeToArray() {\r\n    const activityTypeArray = [];\r\n\r\n    this.activityTypes.forEach((activityType) => {\r\n      activityTypeArray.push(activityType);\r\n    });\r\n    return activityTypeArray;\r\n  }\r\n\r\n\r\n  deleteTransaction(transactionId: number) {     \r\n    this.confirmService.confirm('Confirm Delete', 'Do you want to Delete this transaction!?').subscribe(result => {\r\n      if (result) {\r\n        this.memberService.deleteTransaction(this.member.memberId, transactionId).subscribe(() => {\r\n          this.transactions = this.member.transactions.filter(x => x.transactionId !== transactionId);\r\n          this.toastr.success(\"Transaction deleted succesfully\");\r\n        })\r\n      }\r\n    });   \r\n    \r\n  }\r\n  \r\n}\r\n","<div class=\"\">\n    <button class=\"btn btn-primary   mb-2 \" (click)=\"openMemberAddModal(member)\" *appHasRole='[\"Admin\"]'>\n        Add Transaction</button>\n    <!-- <input class=\"btn btn-primary   mb-2 \" type=\"button\" value=\"Print Preview\" (click)='onPrintPreview()' /> -->\n    <!-- <button  class=\"btn btn-primary   mb-2 \" type=\"button\"  (click)=\"exportToPDF()\">Export</button> -->\n</div>\n<div id=\"printareaDiv\">\n    <table class=\"table sortable\" id=\"transactions\" style=\"width: 950px;\">\n        <thead>\n            <tr>\n                <th style=\"width: 12%;\"></th>\n                <th style=\"width: 12%;\">Date</th>\n                <th style=\"width: 20%;\">Type</th>\n                <th style=\"width: 3%;\">Check</th>\n                <th style=\"width: 20%;\">Comments</th>\n                <th style=\"width: 20%;\">Activity</th>\n                <th style=\"width: 11%;\">Credit</th>\n                <th style=\"width: 11%;\">Debit</th>\n                <th style=\"width: 10%;\">Total</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngIf=\"transactions.length == 0\">\n                <td colspan=\"9\" class=\"text-center font-weight-bold\">\n                    No transactions Found\n                </td>\n            </tr>\n            <tr *ngFor=\"let transaction of transactions | paginate: { itemsPerPage: 10, currentPage: page }\"\n                class=\"item\" class=\"item\">\n                <td>\n                    <div class=\"btn-group\" dropdown *appHasRole='[\"Admin\"]'>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Action</button>\n                        <button id=\"button-split\" type=\"button\" dropdownToggle\n                            class=\"btn btn-primary btn-sm dropdown-toggle dropdown-toggle-split\"\n                            aria-controls=\"dropdown-split\">\n                            <span class=\"caret\"></span>\n                            <span class=\"sr-only\">Split button!</span>\n                        </button>\n                        <ul id=\"dropdown-split\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\"\n                            aria-labelledby=\"button-split\">\n                            <li role=\"menuitem\"><a class=\"dropdown-item\" (click)=\"deleteTransaction(transaction.transactionId)\">Delete</a>\n                            </li>\n                        </ul>\n                    </div>\n                </td>\n                <td>{{transaction.transactionDate| date: 'MM/dd/yyyy'}}</td>\n                <td>{{transaction.transactionTypeName}} </td>\n                <td>{{transaction.checkNumber}} </td>\n                <td>{{transaction.comments}} </td>\n                <td>{{transaction.activityTypeName}}</td>\n                <td>{{transaction.transactionCredit | currency}}</td>\n                <td>{{transaction.transactionDebit | currency}}</td>\n                <td></td>\n            </tr>\n        </tbody>\n        <tfoot *ngIf=\"transactions.length > 0\">\n            <tr>\n                <td colspan=\"6\"></td>\n                <td class=\"font-weight-bold border-top border-dark\" [ngStyle]=\"{'color': getColor(totalCredit)}\">\n                    {{totalCredit | currency }}\n                </td>\n                <td class=\"font-weight-bold border-top border-dark\" [ngStyle]=\"{'color': getColor(TotalDebit)}\">\n                    {{TotalDebit | currency}}\n                </td>\n                <td></td>\n            </tr>\n            <tr>\n                <td colspan=\"8\"></td>\n                <td class=\"font-weight-bold border-top border-dark\" [ngStyle]=\"{'color': getColor(total)}\">\n                    {{total | currency}}\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"9\" class=\"text-center border-top \">\n                    <pagination-controls (pageChange)=\"page = $event\"></pagination-controls>\n                </td>\n            </tr>\n        </tfoot>\n    </table>\n</div>","import { GridtService } from './../../_services/grid.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MemberService } from './../../_services/member.service';\nimport { Member } from './../../_models/member';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-member-transactions',\n  templateUrl: './member-transactions.component.html',\n  styleUrls: ['./member-transactions.component.css'],\n})\nexport class MemberTransactionsComponent implements OnInit {\n  member: Member;\n  troop: string = environment.troop;\n  charteredOrganization = environment.charteredOrganization;\n  troopLocation = environment.troopLocation;\n\n  constructor(\n    private memberService: MemberService,\n    private route: ActivatedRoute,\n    private gridService: GridtService\n  ) {}\n\n  ngOnInit(): void {\n    this.gridService.loadSortableScripts();\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.route.data.subscribe((data) => {\n      this.member = data.member;\n    });\n  }\n\n  isRechartedDateDue() {\n    var today = new Date();\n    var rechartedDate = new Date('10/30/' + today.getFullYear());  \n\n    if (this.member.rechartedDate != null) {\n      var lastRechartedDate = new Date(this.member.rechartedDate);\n      \n      let days = Math.floor((rechartedDate.getTime() - lastRechartedDate.getTime()) / 1000 / 60 / 60 / 24);\n     \n      if (days > 365)\n        return true;\n    }\n    return false;\n  }\n\n  RechartedDateDueColor() {\n     \n      return this.isRechartedDateDue() ? 'red' : 'green';\n    }\n   \n  \n\n}\n","<div class=\"row\" *ngIf=\"member\" id=\"printScreenDiv\">\n    <div class=\"col-3\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.firstName}}\"\n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div class=\"text-center font-weight-bold\">\n                    {{charteredOrganization}}\n                </div>\n                <div class=\"text-center font-weight-bold mt-1\">\n                    {{troop}}\n                </div>\n                <div class=\"text-center font-weight-bold mt-2\">\n                    {{troopLocation}}\n                </div>\n                <hr />\n                <div class=\" mt-1\"><strong> Member :</strong>\n                    {{member.firstName}} {{member.lastName}}\n                </div>\n                <div *ngIf=\"member.age > 0 \"   class=\" mt-1\"><strong>Age : </strong>\n                    {{member.age}}\n                </div>\n                <div class=\" mt-1\" ><strong>Recharted Date : </strong>\n                    <div style=\"display: inline;\" [ngStyle]=\"{'color':RechartedDateDueColor()}\">\n                         {{member.rechartedDate | date}}\n                         <p *ngIf=\"isRechartedDateDue()\" class=\"text-center font-weight-bold\" style=\"color: red;\">Past Due </p>\n                    </div>                   \n                </div>\n                <div class=\" mt-1 mb-2\">\n                    <strong>Position : </strong>\n                    {{ member.currentPosition}}\n                </div>\n                <div class=\" mt-1\" *ngIf=\"member.currentRank == null \"  >\n                    <strong>Rank : </strong>\n                    {{member.currentRank}}\n                </div>\n                <div class=\" mt-1 mb-2\">\n                    <strong>Patrol : </strong>\n                    {{member.patrol}}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-8\">\n        <app-transactions [member]=\"member\" ></app-transactions>\n    </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { MemberParams } from '../_models/memberParams';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getMemberPaginationHeaders(memberParams: MemberParams) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', memberParams.pageNumber.toString());\r\n  params = params.append('pageSize', memberParams.pageSize.toString());\r\n  params = params.append('orderBy', memberParams.orderBy);\r\n  params = params.append('lastName', memberParams.lastName);\r\n  params = params.append('firstName', memberParams.firstName);\r\n  params = params.append('MemberType', memberParams.memberType.toString());\r\n  params = params.append('patrolId', memberParams.patrolId.toString());\r\n\r\n  return params;\r\n}\r\n\r\nexport function getPaginationResult<T>(\r\n  url: string,\r\n  params: HttpParams,\r\n  http: HttpClient\r\n) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n\r\n  return http\r\n    .get<T>(url, { observe: 'response', params })\r\n    .pipe(\r\n      map((response) => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(\r\n            response.headers.get('Pagination')\r\n          );\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n}\r\n","import { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(private BsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.BsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.BsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n</div>\n<div class=\"modal-body\">\n    <p>{{message}}</p>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\n</div>","import { ReconcileMembersComponent } from './reconcile-members/reconcile-members.component';\nimport { UpdateTrooptrackMembersComponent } from './update-trooptrack-members/update-trooptrack-members.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberTransactionsComponent } from './member/member-transactions/member-transactions.component';\nimport { MemberListComponent } from './member/member-list/member-list.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordCompleteComponent } from './reset-password-complete/reset-password-complete.component';\nimport { ResetPasswordSentComponent } from './reset-password-sent/reset-password-sent.component';\nimport { ConfirmedEmailSentComponent } from './confirmed-email-sent/confirmed-email-sent.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { ErrorTestComponent } from './errors/error-test/error-test.component';\nimport { AuthorizedPathGuard } from './_guards/authorized-path.guard';\nimport { LoginComponent } from './login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { ExportPdfComponent } from './export-pdf/export-pdf.component';\nimport { ConfirmedEmailComponent } from './confirmed-email/confirmed-email.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthorizedPathGuard],\n    children: [      \n      { path: 'member', component: MemberListComponent},\n      { path: 'member/:id', component: MemberTransactionsComponent , resolve: { member: MemberDetailResolver}},\n      { path: 'user/edit', component: UserEditComponent },\n      { path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard] },\n      { path: 'update-trooptrack-members', component: UpdateTrooptrackMembersComponent },\n      { path: 'reconcile-members', component: ReconcileMembersComponent}\n    ]\n  },\n  { path: 'export-pdf', component: ExportPdfComponent},\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: 'errors', component: ErrorTestComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'confirm-email', component: ConfirmedEmailComponent },\n  { path: 'confirmed-email-sent', component: ConfirmedEmailSentComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'reset-password-sent', component: ResetPasswordSentComponent },\n  { path: 'reset-password', component: ResetPasswordComponent },\n  { path: 'reset-password-complete', component: ResetPasswordCompleteComponent },\n  { path: '**', component: HomeComponent , pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  @Output() cancelLogin = new EventEmitter();\n  loginForm: FormGroup;\n  model: any = {};\n  validationErrors: string[] = [];\n\n  constructor(\n    private accountService: AccountService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe((response) => {\n      this.router.navigateByUrl('/scouts');\n    });\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n  cancel() {\n    this.router.navigateByUrl('/');\n  }\n}\n","<div class=\"container\" style=\"margin-top: 60px;\">\n    <div class=\"d-flex justify-content-center h-100\">\n        <div class=\"card border-primary div-border\">\n            <div class=\"card-header\">\n                <h3 class=\"text-center text-primary mt-2\">Login</h3>\n            </div>\n            <div class=\"card-body\" id=\"forgotPassCard\">                \n                <form #loginForm='ngForm' class=\"\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n                    <div class=\"from-group\">\n                        <input name=\"username\" [(ngModel)]=\"model.username\" placeholder=\"Username\" type=\"text\"\n                            class=\"form-control mr-sm-2 mt-2\" required>\n                    </div>\n                    <div class=\"from-group mt-2\">\n                        <input name=\"password\" [(ngModel)]=\"model.password\" placeholder=\"Password\" type=\"password\"\n                            class=\"form-control mr-sm-2\" autocomplete=\"off\" required>\n                    </div>\n                    <div class=\"text-center mt-3\">\n                        <button [disabled]='!loginForm.valid' class=\"btn btn-primary rounded justify-content-right\" type=\"submit\">Login</button>\n                        <button class=\"btn btn-outline-warning rounded ml-2\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n                    </div>\n                </form>\n            </div>\n            <div class=\"card-footer \">\n                <div class=\"d-flex justify-content-center links\">Don't have an account?&nbsp;<a [routerLink]=\"['/register']\"> Sign Up</a></div>           \n                <a routerLink='/forgot-password' routerLinkActive='active'>Forgot your password</a>\n                </div>\n            </div>\n        </div>\n    </div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox-input',\n  templateUrl: './checkbox-input.component.html',\n  styleUrls: ['./checkbox-input.component.css']\n})\nexport class CheckboxInputComponent implements ControlValueAccessor {\n  @Input() label: String;\n  @Input() type = 'text';\n  @Input() isChecked = false;\n  @Input() disabled = false;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n  \n  writeValue(obj: any): void { }\n  registerOnChange(fn: any): void { }\n  registerOnTouched(fn: any): void { }\n  \n}\n","<div class=\"form-group form-check\">\n    <input \n        [class.is-invalid]='ngControl.touched && ngControl.invalid'\n        type='checkbox'\n        [class.is-invalid] ='ngControl.touched && ngControl.invalid'\n        class='form-check-input' \n        [formControl]=\"ngControl.control\"\n        >\n        <label class=\"form-check-label text-muted\"  >{{label}}</label>\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter {{label}}</div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password-complete',\n  templateUrl: './reset-password-complete.component.html',\n  styleUrls: ['./reset-password-complete.component.css']\n})\nexport class ResetPasswordCompleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Reset Password</h1>\n<hr>\n<p>Your password has been reset. Proceed to&nbsp;\n    <a class=\"\" routerLink='/login' routerLinkActive='active'>Login</a></p>","import { NewTransaction } from './../../_models/newTransaction';\nimport { TransactionType } from './../../_models/transactionType';\nimport { ActivityType } from './../../_models/activityType';\nimport { Transaction } from './../../_models/transaction';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\n\n@Component({\n  selector: 'app-member-add-modal',\n  templateUrl: './member-add-modal.component.html',\n  styleUrls: ['./member-add-modal.component.css']\n})\nexport class MemberAddModalComponent implements OnInit {\n  @Input() addMemberTransaction = new EventEmitter();\n  member: Member;\n  transaction: NewTransaction = {\n    transactionTypeId: \"\", activityTypeId: \"\", transactionCredit: \"\" , transactionDebit: \"\",\n    checkNumber: '', transactionDate: '', comments: ''\n  }\n  activityTypes: ActivityType[];\n  transactionTypes: TransactionType[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  addTransaction() {\n\n    this.addMemberTransaction.emit(this.transaction);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">New Transaction for {{member.firstName}} {{member.lastName}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body \">\n    <form #transactionForm='ngForm' id=\"transactionForm\" class=\"form-inline\" >\n        <div class=\"from-group \">\n            <label class=\"text-left font-weight-bold justify-content-start pl-1\">Transaction Date:</label>\n            <input [ngModel]=\"transaction.transactionDate\" required ngModel \n            (ngModelChange)=\"transaction.transactionDate = $event\" type=\"date\" placeholder=\"Transaction Date\" name=\"transactionDate\"\n                class=\"form-control input-pointer \">\n        </div>\n        <div class=\"displayBlock\"></div>\n        <div class=\"from-group text-left mt-1\">\n            <label class=\" font-weight-bold justify-content-start pl-1\" >Transaction Type:</label>\n            <select #transactionType class=\"form-control mr-2 input-pointer\" [(ngModel)]=\"transaction.transactionTypeId\" \n                ngModel name=\"transactionType\" required >\n                <option value='0' disabled muted >Select Transaction Type </option>\n                <option *ngFor=\"let transactionType of transactionTypes\" [ngValue]=\"transactionType.transactionTypeId\">\n                    {{transactionType.transactionTypeName}}\n                </option>\n            </select>\n        </div>\n        <div class=\"from-group mt-1 \">\n            <label class=\"text-left font-weight-bold justify-content-start pl-1\">Check:</label>\n            <input [(ngModel)]=\"transaction.checkNumber\" ngModel  placeholder=\"Check Number\" name=\"checkNumber\"\n                class=\"form-control input-pointer\">\n        </div>\n        <div class=\"from-group mt-1\">\n            <label class=\"text-left font-weight-bold justify-content-start pl-1\">Comments:</label>\n            <input [(ngModel)]=\"transaction.comments\" ngModel  placeholder=\"Comments\" size=\"56\" name=\"comments\"\n                class=\"form-control input-pointer\">\n        </div>\n        <div class=\"from-group text-left mt-1\">\n            <label class=\" font-weight-bold justify-content-start pl-1\" >Activity:</label>\n            <select #activityType class=\"form-control mr-4 input-pointer\" [(ngModel)]=\"transaction.activityTypeId\" \n                ngModel name=\"activityType\" >\n                <option value='0' disabled muted >Select Activity </option>\n                <option *ngFor=\"let activityType of activityTypes\" [ngValue]=\"activityType.activityTypeId\">\n                    {{activityType.activityTypeName}}\n                </option>\n            </select>\n        </div>       \n        <div class=\"from-group mt-1\">\n            <label class=\"text-left font-weight-bold justify-content-start pl-1\">Credit:</label>\n            <input [(ngModel)]=\"transaction.transactionCredit\" required ngModel  placeholder=\"Credit Amount\" \n            name=\"transactionCredit\" class=\"form-control mr-2\"  >\n        </div>\n        <div class=\"from-group mt-1\">\n            <label class=\"text-left font-weight-bold justify-content-start pl-1\">Debit:</label>\n            <input [(ngModel)]=\"transaction.transactionDebit\" required ngModel  placeholder=\"Debit Amount\" \n                name=\"transactionDebit\"  class=\"form-control\"  >\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary rounded\"  [disabled]='!transactionForm.valid' (click)=\"addTransaction()\">Add</button>\n    <button type=\"button\" class=\"btn btn-outline-secondary rounded\" (click)=\"bsModalRef.hide()\">Cancel</button>\n</div>","import { ConfirmDialogComponent } from './../modals/confirm-dialog/confirm-dialog.component';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText\n      }\n    };\n    this.bsModalRef = this.modalService.show(ConfirmDialogComponent, config);\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        }\n      }\n    }\n  }\n  \n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.firstName}} {{user.lastName}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form #rolesForm='ngForm' id=\"rolesForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n            <input type=\"checkbox\" class=\"form-check-input\" [checked]=\"role.checked\" value=\"role.name\"\n                style=\"cursor: pointer;\" (change)=\"role.checked = !role.checked\"\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\">\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary rounded\" (click)=\"updateRoles()\">Update</button>\n    <button type=\"button\" class=\"btn btn-outline-secondary rounded\" (click)=\"bsModalRef.hide()\">Cancel</button>    \n</div>\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}